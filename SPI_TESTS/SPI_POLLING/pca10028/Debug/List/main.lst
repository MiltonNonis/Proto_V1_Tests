###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.4.8167/W32 for ARM        15/Apr/2015  13:45:51
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\Professional\Nuzzle\Collar\FW\Proto_V1_Tests\SPI_TESTS\SPI_POLLING\main.c
#    Command line =  
#        E:\Professional\Nuzzle\Collar\FW\Proto_V1_Tests\SPI_TESTS\SPI_POLLING\main.c
#        -D NRF51 -D NUZZLE_COLLAR_PROTO_1 -D BLE_STACK_SUPPORT_REQD -D S110 -D
#        SPI_MASTER_0_ENABLE -D ACCELEROMETER_ENABLE -lCN
#        E:\Professional\Nuzzle\Collar\FW\Proto_V1_Tests\SPI_TESTS\SPI_POLLING\pca10028\Debug\List\
#        --diag_suppress Pe301,Pa082 -o
#        E:\Professional\Nuzzle\Collar\FW\Proto_V1_Tests\SPI_TESTS\SPI_POLLING\pca10028\Debug\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M0 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        E:\Professional\Nuzzle\Collar\FW\Proto_V1_Tests\SPI_TESTS\SPI_POLLING\pca10028\..\
#        -I
#        E:\Professional\Nuzzle\Collar\FW\Proto_V1_Tests\SPI_TESTS\SPI_POLLING\pca10028\..\pca10028\
#        -I
#        E:\Professional\Nuzzle\Collar\FW\Proto_V1_Tests\SPI_TESTS\SPI_POLLING\pca10028\..\devices\
#        -I
#        E:\Dev_Tools\NordicSemi\nRF51-DK\nRF51_SDK_7.2.0_cf547b5\components\drivers_nrf\hal\
#        -I
#        E:\Dev_Tools\NordicSemi\nRF51-DK\nRF51_SDK_7.2.0_cf547b5\components\drivers_nrf\spi_master\
#        -I
#        E:\Dev_Tools\NordicSemi\nRF51-DK\nRF51_SDK_7.2.0_cf547b5\components\libraries\gpiote\
#        -I
#        E:\Dev_Tools\NordicSemi\nRF51-DK\nRF51_SDK_7.2.0_cf547b5\components\libraries\scheduler\
#        -I
#        E:\Dev_Tools\NordicSemi\nRF51-DK\nRF51_SDK_7.2.0_cf547b5\components\libraries\timer\
#        -I
#        E:\Dev_Tools\NordicSemi\nRF51-DK\nRF51_SDK_7.2.0_cf547b5\components\libraries\util\
#        -I
#        E:\Dev_Tools\NordicSemi\nRF51-DK\nRF51_SDK_7.2.0_cf547b5\components\softdevice\s110\headers\
#        -I
#        E:\Dev_Tools\NordicSemi\nRF51-DK\nRF51_SDK_7.2.0_cf547b5\components\softdevice\common\softdevice_handler\
#        -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\CMSIS\Include\" -On
#    List file    =  
#        E:\Professional\Nuzzle\Collar\FW\Proto_V1_Tests\SPI_TESTS\SPI_POLLING\pca10028\Debug\List\main.lst
#    Object file  =  
#        E:\Professional\Nuzzle\Collar\FW\Proto_V1_Tests\SPI_TESTS\SPI_POLLING\pca10028\Debug\Obj\main.o
#
###############################################################################

E:\Professional\Nuzzle\Collar\FW\Proto_V1_Tests\SPI_TESTS\SPI_POLLING\main.c
      1          /* Copyright (c) 2014 Nordic Semiconductor. All Rights Reserved.
      2           *
      3           * The information contained herein is property of Nordic Semiconductor ASA.
      4           * Terms and conditions of usage are described in detail in NORDIC
      5           * SEMICONDUCTOR STANDARD SOFTWARE LICENSE AGREEMENT.
      6           *
      7           * Licensees are granted free, non-transferable use of the information. NO
      8           * WARRANTY of ANY KIND is provided. This heading must NOT be removed from
      9           * the file.
     10           *
     11           */
     12          
     13          /** @file
     14          * @defgroup spi_master_example_main main.c
     15          * @{
     16          * @ingroup spi_master_example
     17          *
     18          * @brief SPI Master Loopback Example Application main file.
     19          *
     20          * This file contains the source code for a sample application using SPI.
     21          *
     22          */
     23          
     24          #include "nrf51.h"
     25          #include "nrf_delay.h"
     26          #include "nrf_gpio.h"
     27          #include "app_error.h"
     28          #include "app_util_platform.h"
     29          #include "bsp.h"
     30          #include "app_timer.h"
     31          #include "app_gpiote.h"
     32          #include "nordic_common.h"
     33          //#include "nrf_sdm.h"
     34          //#include "softdevice_handler.h"
     35          
     36          //#include "SensorUtils.h"
     37          #include <collar_defines.h>
     38          #include <spi_master.h>
     39          
     40          
     41          #define IS_SRVC_CHANGED_CHARACT_PRESENT     0     /**< Include or not the service_changed characteristic. if not enabled, the server's database cannot be changed for the lifetime of the device*/
     42          
     43          #define APP_TIMER_PRESCALER      0                      /**< Value of the RTC1 PRESCALER register. */
     44          #define APP_TIMER_MAX_TIMERS     4      // BSP_APP_TIMERS_NUMBER  /**< Maximum number of simultaneously created timers. */
     45          #define APP_TIMER_OP_QUEUE_SIZE  2                      /**< Size of timer operation queues. */
     46          
     47          #define DELAY_MS                 10          //1000                   /**< Timer Delay in milli-seconds. */
     48          
     49          
     50          // LIS3DS0 register info
     51          #define LIS3DH_WHOAMI_REG			(0x0F)		// [R/O -0x33] identification reg
     52          #define LIS3DH_WHOAMI_VAL  			(0x33)		// identification value
     53          
     54          // LIS3DH SPI flags for read/write and auto increment for multi-register reads
     55          #define LIS3DH_SPI_READ_FLAG			    (0x80)
     56          #define LIS3DH_SPI_AUTO_INCREMENT_ADRR_FLAG (0x40)
     57          
     58          
     59          
     60          /** @def  TX_RX_MSG_LENGTH
     61           * number of bytes to transmit and receive. This amount of bytes will also be tested to see that
     62           * the received bytes from slave are the same as the transmitted bytes from the master */
     63          #define TX_RX_MSG_LENGTH         100
     64          

   \                                 In section .bss, align 4
     65          static uint8_t SpiTxData[TX_RX_MSG_LENGTH]; /**< SPI master TX buffer. */
   \                     SpiTxData:
   \   00000000                      DS8 100

   \                                 In section .bss, align 4
     66          static uint8_t SpiRxData[TX_RX_MSG_LENGTH]; /**< SPI master RX buffer. */
   \                     SpiRxData:
   \   00000000                      DS8 100
     67          
     68          #if 0
     69          /**@brief Function for error handling, which is called when an error has occurred. 
     70           *
     71           * @param[in] error_code  Error code supplied to the handler.
     72           * @param[in] line_num    Line number where the handler is called.
     73           * @param[in] p_file_name Pointer to the file name. 
     74           */
     75          void app_error_handler(uint32_t error_code, uint32_t line_num, const uint8_t * p_file_name)
     76          {
     77              UNUSED_VARIABLE(bsp_indication_set(BSP_INDICATE_FATAL_ERROR));
     78          
     79              for (;; )
     80              {
     81                  // No implementation needed.
     82              }
     83          }
     84          #endif
     85          
     86          
     87          /** @brief Function for main application entry.
     88           * Polling mode SPI master testing code.
     89           */

   \                                 In section .text, align 4, keep-with-next
     90          int main(void)
     91          {
   \                     main: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     92              NRF_SPI_Type *spiModAddr = NULL;  
   \   00000002   0x2400             MOVS     R4,#+0
     93              // Setup bsp module.
     94          //    bsp_configuration();
     95              // Initialize the spi port to use for Accel
     96              // SPI_MASTER0, SPI_MODE0, LSB first
     97              spiModAddr = (NRF_SPI_Type *)spi_master_init(ACCEL_SPI_BUS, SPI_MODE0, false);
   \   00000004   0x2200             MOVS     R2,#+0
   \   00000006   0x2100             MOVS     R1,#+0
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x.... 0x....      BL       spi_master_init
   \   0000000E   0x0004             MOVS     R4,R0
     98              for (;; )
     99              {
    100                  // Copy register to read from (Accel sensor LSM3DH0)
    101                  // Read one register: send address + read register value
    102                  SpiTxData[0] = (uint8_t)(LIS3DH_WHOAMI_REG | LIS3DH_SPI_READ_FLAG);
   \                     ??main_0: (+1)
   \   00000010   0x208F             MOVS     R0,#+143
   \   00000012   0x490A             LDR      R1,??main_1
   \   00000014   0x7008             STRB     R0,[R1, #+0]
    103                  SpiTxData[1] = 0x00;
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x4908             LDR      R1,??main_1
   \   0000001A   0x7048             STRB     R0,[R1, #+1]
    104                  SpiRxData[0] = 0x00;
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0x4908             LDR      R1,??main_1+0x4
   \   00000020   0x7008             STRB     R0,[R1, #+0]
    105                  SpiRxData[1] = 0x00;
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0x4906             LDR      R1,??main_1+0x4
   \   00000026   0x7048             STRB     R0,[R1, #+1]
    106          
    107                  spi_master_tx_rx((uint32_t *)spiModAddr, 2, SpiTxData, SpiRxData);
   \   00000028   0x4B05             LDR      R3,??main_1+0x4
   \   0000002A   0x4A04             LDR      R2,??main_1
   \   0000002C   0x2102             MOVS     R1,#+2
   \   0000002E   0x0020             MOVS     R0,R4
   \   00000030   0x.... 0x....      BL       spi_master_tx_rx
    108          
    109                  nrf_delay_ms(DELAY_MS);
   \   00000034   0x200A             MOVS     R0,#+10
   \   00000036   0x.... 0x....      BL       nrf_delay_ms
   \   0000003A   0xE7E9             B        ??main_0
   \                     ??main_1:
   \   0000003C   0x........         DC32     SpiTxData
   \   00000040   0x........         DC32     SpiRxData
    110              }
    111          }
    112          
    113          
    114          /** @} */

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   main
         8   -> nrf_delay_ms
         8   -> spi_master_init
         8   -> spi_master_tx_rx


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     100  SpiRxData
     100  SpiTxData
      68  main

 
 200 bytes in section .bss
  68 bytes in section .text
 
  68 bytes of CODE memory
 200 bytes of DATA memory

Errors: none
Warnings: none
